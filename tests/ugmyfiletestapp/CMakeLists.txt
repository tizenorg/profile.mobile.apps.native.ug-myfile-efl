CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
PROJECT(ugmyfiletestapp)

SET(DEBFILE_NAME org.tizen.ugmyfiletestapp)

SET(INCLUDE-DIR ${CMAKE_CURRENT_SOURCE_DIR}/include)
SET(SRC-DIR ${CMAKE_CURRENT_SOURCE_DIR}/src)

SET(PKG_NAME "${CMAKE_INSTALL_PKG_NAME}")
SET(DESKTOP_DIR ${CMAKE_DESKTOP_DIR})

SET(PREFIX ${CMAKE_INSTALL_PREFIX})
SET(BINDIR "${PREFIX}/bin")
SET(RESDIR "${PREFIX}/res")
SET(LIBDIR "/usr/lib")
SET(DATADIR "${CMAKE_INSTALL_DATA_DIR}")
SET(XMLDIR "/usr/share/packages")
SET(EDJDIR "${RESDIR}/edje")

#SET(ADD_SEARCH_MODULE 1) ##value is not meaningful one

#MYFILE_ADD_TO_HOME

INCLUDE_DIRECTORIES(${INCLUDE-DIR})

SET(SRCS
    ${SRC-DIR}/main.c
    )

INCLUDE(FindPkgConfig)
pkg_check_modules(pkgs REQUIRED
capi-appfw-application
capi-content-media-content
elementary
glib-2.0
gthread-2.0
drm-client
ui-gadget-1
#dlog
ecore-imf
ecore-x
eina
evas
edje
ecore
ecore-file
ecore-input
capi-system-power
)
# org.tizen.live-myfile
# debian

FOREACH(flag ${pkgs_CFLAGS})
    SET(EXTRA_CFLAGS "${EXTRA_CFLAGS} ${flag}")
ENDFOREACH(flag)
#SET(EXTRA_CFLAGS "${EXTRA_CFLAGS} -finstrument-functions")

SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${EXTRA_CFLAGS} -Wall -Wextra -g -fpie -fPIC -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64")
SET(CMAKE_C_FLAGS_DEBUG "-O0")
SET(CMAKE_C_FLAGS_RELEASE "-O2")
SET(CMAKE_EXE_LINKER_FLAGS "-Wl,--as-needed -pie")

SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${EXTRA_CFLAGS} -Wall -Wextra -g -fpie -fPIC -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64")
SET(CMAKE_CXX_FLAGS_DEBUG "-O0")
SET(CMAKE_CXX_FLAGS_RELEASE "-O2")

ADD_DEFINITIONS("-DPREFIX=\"${CMAKE_INSTALL_PREFIX}\"")
ADD_DEFINITIONS("-DDATADIR=\"${DATADIR}\"")


ADD_DEFINITIONS("-DFACTORYFS=\"$ENV{FACTORYFS}\"")
ADD_DEFINITIONS("-DMYFILE_USE_LOG")
ADD_DEFINITIONS("-DMYFILE_USE_TA")
ADD_DEFINITIONS("-DMYFILE_USB_OTG")
ADD_DEFINITIONS("-DMYFILE_MOTION_FEATURE")


ADD_EXECUTABLE(${PROJECT_NAME} ${SRCS})

TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${pkgs_LDFLAGS} -lm -lpthread)

INSTALL(TARGETS ${PROJECT_NAME} ${LIBNAME}
        RUNTIME DESTINATION ${BINDIR}
        LIBRARY DESTINATION ${LIBDIR})

INSTALL(DIRECTORY DESTINATION ${DATADIR})

# edje
ADD_CUSTOM_TARGET(layoutedj.edj
        COMMAND edje_cc ${CMAKE_CURRENT_SOURCE_DIR}/edj/layoutedj.edc
        ${CMAKE_BINARY_DIR}/layoutedj.edj
        DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/edj/layoutedj.edc
)

ADD_DEPENDENCIES(${PROJECT_NAME} layoutedj.edj)

INSTALL(FILES ${CMAKE_BINARY_DIR}/layoutedj.edj DESTINATION ${EDJDIR})

CONFIGURE_FILE(${PACKAGE_NAME}.xml.in ${PACKAGE_NAME}.xml)
INSTALL(TARGETS ${PROJECT_NAME} DESTINATION ${BINDIR})
INSTALL(FILES ${PACKAGE_NAME}.xml DESTINATION ${MANIFESTDIR})
INSTALL(FILES ${CMAKE_SOURCE_DIR}/${DESKTOP_ICON} DESTINATION ${DESKTOP_ICONDIR})

#End for myfile ug
